# Скрипт для задания индивидуальных ориентировок кристаллов в зависимости от заданной объемной доли второй фазы.
# Принцип работы: чтение файла геометрии, выгрузка ID ячеек в массив, для определенных ID подсчет суммарного количества ячеек с этим номером, расчет отношения этого количества к общему объему конечного элемента, сравнение с заданной объемной долей.
# Выходные данные: номера ID, которым нужно присвоить ориентировки ниобия.
# Исходные данные:
v = 10 # Заданная объемная доля
sumV = 50*50*50 # Заданный объем конечного элемента
g = 1000 # Заданное число зерен
# Чтение в массив:
n = 11 # Первая строка для счета
# Создаем массив из g элементов, начальное значение каждого - 0
array = [0] * g
# Открываем файл для чтения
with open('geom1.vtk', 'r') as file:
    # Пропускаем первые n-1 строк
    for _ in range(n-1):
        next(file)
    # Читаем строки файла
    for line in file:
        # Разбиваем строку на числа
        numbers = map(int, line.split())
        # Увеличиваем значения соответствующих ячеек массива
        for number in numbers:
            if number == 'METADATA':  # Если встречена строка 'METADATA', прерываем чтение файла
                break
            array[number - 1] += 1
# Выводим массив
for i in range(len(array)):
    print(f"Элемент {i+1}: {array[i]}")

V = array[g-1]
k = g
while (100 * V / sumV) < v:
    V += array[k - 2]
    k -= 1
print("Расчётная объёмная доля ниобия:", 100 * V / sumV)
print("Зёрна с индексами, меньше, чем этот, являются зёрнами меди:", k)
